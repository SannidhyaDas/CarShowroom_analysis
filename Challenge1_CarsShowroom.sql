-- SQL Challenge 1 
-- Steve's Car Showroom 

CREATE TABLE cars (
car_id INT PRIMARY KEY,
make VARCHAR(50),
type VARCHAR(50),
style VARCHAR(50),
cost_$ INT
);

-- Data Entry 

INSERT INTO cars (car_id, make, type, style, cost_$)
VALUES (1, 'Honda', 'Civic', 'Sedan', 30000),
(2, 'Toyota', 'Corolla', 'Hatchback', 25000),
(3, 'Ford', 'Explorer', 'SUV', 40000),
(4, 'Chevrolet', 'Camaro', 'Coupe', 36000),
(5, 'BMW', 'X5', 'SUV', 55000),
(6, 'Audi', 'A4', 'Sedan', 48000),
(7, 'Mercedes', 'C-Class', 'Coupe', 60000),
(8, 'Nissan', 'Altima', 'Sedan', 26000);

-- another table 

CREATE TABLE salespersons (
salesman_id INT PRIMARY KEY,
name VARCHAR(50),
age INT,
city VARCHAR(50)
);

-- Data Entry 

INSERT INTO salespersons (salesman_id, name, age, city)
VALUES (1, 'John Smith', 28, 'New York'),
(2, 'Emily Wong', 35, 'San Fran'),
(3, 'Tom Lee', 42, 'Seattle'),
(4, 'Lucy Chen', 31, 'LA');

-- another table 

CREATE TABLE sales (
sale_id INT PRIMARY KEY,
car_id INT,
salesman_id INT,
purchase_date DATE,
FOREIGN KEY (car_id) REFERENCES cars(car_id),
FOREIGN KEY (salesman_id) REFERENCES salespersons(salesman_id)
);
-- Data Entry 

INSERT INTO sales (sale_id, car_id, salesman_id, purchase_date)
VALUES (1, 1, 1, '2021-01-01'),
(2, 3, 3, '2021-02-03'),
(3, 2, 2, '2021-02-10'),
(4, 5, 4, '2021-03-01'),
(5, 8, 1, '2021-04-02'),
(6, 2, 1, '2021-05-05'),
(7, 4, 2, '2021-06-07'),
(8, 5, 3, '2021-07-09'),
(9, 2, 4, '2022-01-01'),
(10, 1, 3, '2022-02-03'),
(11, 8, 2, '2022-02-10'),
(12, 7, 2, '2022-03-01'),
(13, 5, 3, '2022-04-02'),
(14, 3, 1, '2022-05-05'),
(15, 5, 4, '2022-06-07'),
(16, 1, 2, '2022-07-09'),
(17, 2, 3, '2023-01-01'),
(18, 6, 3, '2023-02-03'),
(19, 7, 1, '2023-02-10'),
(20, 4, 4, '2023-03-01');

-- Q1. What are the details of all cars purchased in the year 2022?

SELECT cars.car_id,make,type,style,cost_$,sales.purchase_date FROM cars
JOIN sales ON cars.car_id=sales.car_id
WHERE purchase_date >= '2022-01-01' AND purchase_date < '2023-01-01'
ORDER BY purchase_date;

-- Q2. What is the total number of cars sold by each salesperson?

SELECT salespersons.name AS Sales_person,salespersons.salesman_id,
COUNT(sale_id) AS Cars_sold_by
FROM salespersons 
JOIN sales ON salespersons.salesman_id=sales.salesman_id
GROUP BY salespersons.salesman_id
ORDER BY 3 DESC;

-- Q3. What is the total revenue generated by each salesperson?

WITH total_rev AS (
  SELECT
    salespersons.salesman_id,
    SUM(cars.cost_$) AS total_revenue
  FROM
    salespersons
    JOIN sales ON salespersons.salesman_id = sales.salesman_id
    JOIN cars ON sales.car_id = cars.car_id
  GROUP BY
    salespersons.salesman_id
)
SELECT
  salespersons.name,
  total_rev.total_revenue,salespersons.salesman_id
FROM
  salespersons
  JOIN total_rev ON salespersons.salesman_id = total_rev.salesman_id
ORDER BY
  total_rev.total_revenue DESC;

-- Q4. What are the details of the cars sold by each salesperson?

WITH total_rev AS(

SELECT name,sales.car_id FROM salespersons
	JOIN  sales ON salespersons.salesman_id=sales.salesman_id
GROUP BY salespersons.salesman_id,sales.car_id
ORDER BY 1 
)
SELECT total_rev.*,make,type,style,cost_$ FROM total_rev
JOIN cars ON total_rev.car_id=cars.car_id;

-- Q5. What is the total revenue generated by each car type?

  SELECT cars.type,
    SUM(cars.cost_$) AS total_revenue
  FROM sales
    JOIN cars ON sales.car_id = cars.car_id
  GROUP BY cars.type
	ORDER BY total_revenue DESC;

-- Q6. What are the details of the cars sold in the year 2021 by 
-- salesperson 'Emily Wong'?

SELECT make,type,style,cost_$,salespersons.name,sales.purchase_date 
FROM cars
JOIN sales ON cars.car_id=sales.car_id
JOIN salespersons ON salespersons.salesman_id=sales.salesman_id
WHERE purchase_date >= '2021-01-01' 
AND purchase_date < '2022-01-01'
AND name = 'Emily Wong';

-- Q7. What is the total revenue generated by the sales of hatchback cars?

SELECT cars.car_id,style,SUM(cost_$) AS total_rev
FROM cars
JOIN sales ON cars.car_id=sales.car_id 
WHERE style = 'Hatchback'
GROUP BY cars.car_id;

-- Q8. What is the total revenue generated by the sales of SUV cars in 
-- the year 2022?

-- finding SUV car revenue 
SELECT cars.car_id, type,style,SUM(cost_$) AS total_rev
FROM cars
JOIN sales ON cars.car_id=sales.car_id 
WHERE style = 'SUV'
AND purchase_date >= '2022-01-01' 
AND purchase_date < '2023-01-01'
GROUP BY cars.car_id;

-- Then this

WITH total_rev_SUV AS(
	
SELECT cars.car_id, type,style,SUM(cost_$) AS total_rev
FROM cars
JOIN sales ON cars.car_id=sales.car_id 
WHERE style = 'SUV'
AND purchase_date >= '2022-01-01' 
AND purchase_date < '2023-01-01'
GROUP BY cars.car_id
ORDER BY 4
)
SELECT style,SUM(total_rev) AS total_revenue 
FROM total_rev_SUV
GROUP BY total_rev_suv.style

-- Q9. What is the name and city of the salesperson who sold the most 
-- number of cars in the year 2023?

SELECT salespersons.salesman_id,salespersons.name,
salespersons.city,COUNT(*) AS num_cars_sold
FROM salespersons 
JOIN sales ON salespersons.salesman_id=sales.salesman_id
WHERE purchase_date >= '2023-01-01' 
AND purchase_date < '2024-01-01'
GROUP BY
    salespersons.salesman_id,
    salespersons.name,
    salespersons.city
ORDER BY 4 DESC
LIMIT 1;

-- Another way

WITH sales_count AS (
  SELECT
    salespersons.salesman_id,
    salespersons.name,
    salespersons.city,
    COUNT(*) AS num_cars_sold
  FROM
    salespersons
    JOIN sales ON salespersons.salesman_id = sales.salesman_id
  WHERE
    sales.purchase_date >= '2023-01-01'
    AND sales.purchase_date < '2024-01-01'
  GROUP BY
    salespersons.salesman_id,
    salespersons.name,
    salespersons.city
)
SELECT
  name,
  city
FROM
  sales_count
WHERE
  num_cars_sold = (
    SELECT
      MAX(num_cars_sold)
    FROM
      sales_count
  );

-- Q10. What is the name and age of the salesperson who generated the 
-- highest revenue in the year 2022?

SELECT salespersons.name,salespersons.age,SUM(cost_$) AS Revenue
FROM salespersons
JOIN sales ON salespersons.salesman_id=sales.salesman_id
JOIN cars ON sales.car_id=cars.car_id
WHERE purchase_date >= '2022-01-01' 
AND purchase_date < '2023-01-01'
GROUP BY
    salespersons.name, salespersons.age
ORDER BY 3 DESC
LIMIT 1;

------------------------------THE END------------------------------
